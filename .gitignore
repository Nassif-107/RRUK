## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.

# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Mono Auto Generated Files
mono_crash.*

# Windows image file caches
Thumbs.db
ehthumbs.db

# Folder config file
Desktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msm
*.msp

# Windows shortcuts
*.lnk

# =========================
# Visual Studio
# =========================

# IDE and build output
[Bb]in
[Oo]bj
[Ll]og
[Ll]ogs
[Dd]ebug*/
[Rr]elease*/
x64/
x86/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]uild[Ll]og.*
*.[Oo]bj
*.[Pp]db
*.[Tt]log
*.[Tt]mp
*.[Vv]spscc
*.vssscc
*.scc

# NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config

# NuGet v3's project.json files produces more ignoreable files
*.nuget.props
*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*.appxupload

# Visual Studio cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#/wwwroot/

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# JustCode is a .NET coding add-in
.JustCode

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# AxoCover is a Code Coverage Tool
.axoCover/*
!.axoCover/settings.json

# Visual Studio code coverage results
*.coverage
*.coveragexml

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# BizTalk server
*.Pipelines.xml
*.BTM
*.BTP
*.BTS
*.PPL
*.TDG
*.TDL
*.BTDFProj
*.BTDFPROJ
*.Bindings.xml
*.BindingInfo.xml
*.ApplicationDescription.xml
*.Directory.proj
*.PortBindingsMaster.xml
*.odx.cs
*.xsd.cs

# Web workbench (sass)
.sass-cache/

# InstallShield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.HxS
DocProject/Help/*.HxQ

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
#*.pubxml
*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/

# NuGet Packages Directory
## TODO: If you have NuGet Package Restore enabled, uncomment the next line
#packages/

# Windows Symbol Cache
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
ServiceFabricBackup/
*.rptproj.bak

# SQL Server files
*.mdf
*.ldf
*.ndf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rptproj.rsuser
*- [Bb]ackup.rdl
*- [Bb]ackup ([0-9]).rdl
*- [Bb]ackup ([0-9][0-9]).rdl

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin save file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat
node_modules/

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe
paket-files/

# FAKE - F# Make
.fake/

# JetBrains Rider
.idea/
*.sln.iml

# CodeRush personal settings
.cr/personal

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

# Cake - Uncomment if you are using it
# tools/**
# !tools/bin/
# !tools/Build.ps1

# Tabs Studio
*.tss

# Telerik's JustMock configuration file
*.jmconfig

# BizTalk temporary files
*.pidb
*.tp

# OpenCover UI analysis results
OpenCover/

# Azure Stream Analytics local run
ASALocalRun/

# MSBuild Structured Log
*.binlog

# NVidia Nsight GPU debugger configuration file
*.nvuser

# MFractors (Xamarin productivity tool) working directory
.mfractor/

# Local History for Visual Studio
.localhistory/

# BeatPulse healthcheck temp database
healthchecksdb

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm

# Rider
.idea/

# User-specific stuff
*.rsuser
*.userosscache
*.userprefs
*.suo
*.nopdb
*.svclog

# macOS
.DS_Store

# Mono Auto Generated Files
mono_crash.*

# Windows Files
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/

# Python
__pycache__/
*.py[cod]
*.pyo
*.pyd
.Python
venv/
pip-wheel-metadata/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# MyPy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Cython debug symbols
cython_debug/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
.profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery beat schedule file
celerybeat-schedule

# SageMath parsed files
*.sage.py

# Environments
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
.env.schema
.env.schema.local
.dockerenv

# mkdocs documentation
/site

# mkdocs documentation config file
mkdocs.yml

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# Jekyll
_site/
.sass-cache/
.jekyll-cache/
.jekyll-metadata

# Vue.js
node_modules/
dist/

# Serverless directories
.serverless/

# Firebase generated files
.firebase/

# fuse.js - JavaScript-based file system
.fuse_hidden*

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Typings - TypeScript typings manager
typings/
!typings/**/*.d.ts

# TypeScript compiled files
*.tsbuildinfo

# TSLint cached information
.tslintcache

# Vue.js production build files
dist/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Vue.js ESLint cache
.eslintcache

# npm 5.x+
package-lock.json
.pnpm-lock.yaml

# Yarn Integrity file
.yarn-integrity

# dotenv environment variable files
.env
.env.test
.env.production

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and *not* Next.js
# public

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless/